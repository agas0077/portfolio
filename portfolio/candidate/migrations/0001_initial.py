# Generated by Django 4.2 on 2023-04-13 09:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=200, verbose_name='Имя')),
                ('surname', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('search_job_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Какую работу ищу')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('distant_work', models.BooleanField(default=True, verbose_name='Готовность к удаленной работе')),
                ('phone_num', models.CharField(blank=True, max_length=12, null=True, verbose_name='Номер телефона')),
                ('city', models.CharField(blank=True, max_length=200, null=True, verbose_name='Город')),
                ('country', models.CharField(blank=True, max_length=200, null=True, verbose_name='Страна')),
                ('about', models.TextField(blank=True, null=True, verbose_name='О себе')),
                ('telegram', models.URLField(blank=True, null=True, verbose_name='Ссылка на Telegram')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='Ссылка на Linkedin')),
                ('github', models.URLField(blank=True, null=True, verbose_name='Ссылка на Github')),
                ('stack_overflow', models.URLField(blank=True, null=True, verbose_name='Ссылка на Stack Overflow')),
                ('codeopen', models.URLField(blank=True, null=True, verbose_name='Ссылка на Codeopen')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('tooltip', models.CharField(max_length=100, verbose_name='Подсказка')),
                ('level', models.CharField(choices=[('Good', 'Хорошее владение'), ('Advanced', 'Продвинутое владение'), ('Expect', 'Экспертное владение'), ('Pro', 'Профессиональное владение')], max_length=100, verbose_name='Степень')),
                ('percent', models.IntegerField(choices=[(80, 'Хорошее владение'), (85, 'Продвинутое владение'), (90, 'Экспертное владение'), (95, 'Профессиональное владение')], verbose_name='Процент владения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('level', models.CharField(max_length=200, verbose_name='Уровень владения')),
                ('stars', models.CharField(choices=[('0', 'Одна звезда'), ('01', 'Две звезды'), ('012', 'Три звезды'), ('0123', 'Четыре звезды'), ('01234', 'Пять звезд')], max_length=5, verbose_name='Степень владения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Должность')),
                ('description', models.TextField(verbose_name='Описание')),
                ('company', models.CharField(max_length=200, verbose_name='Названи компании')),
                ('company_link', models.URLField(verbose_name='Ссылка на сайт компании')),
                ('date_from', models.DateField(verbose_name='Начало работы')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='Окончание работы')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_from',),
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('place', models.CharField(max_length=200, verbose_name='Учебное заведение')),
                ('date_from', models.DateField(verbose_name='Начало обучения')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='Окончание обучения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
